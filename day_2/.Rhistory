count_data = read.table("C:/drug discovery hackathon/day_2/GSE123658_read_counts.gene_level.txt", row.names = 1, sep = "/t")
count_data = read.table("C:/drug discovery hackathon/day_2/GSE123658_read_counts.gene_level.txt", row.names = 1, sep = "\t")
head(count_data)
count_data = read.table("C:/drug discovery hackathon/day_2/GSE123658_read_counts.gene_level.txt", row.names = 1, header = T, sep = "\t")
head(count_data)
count_data = read.table("C:/drug discovery hackathon/day_2/GSE123658_read_counts.gene_level.txt", row.names = 1, col.names = 1, sep = "\t")
count_data = read.table("C:/drug discovery hackathon/day_2/GSE123658_read_counts.gene_level.txt", row.names = 1, header = T, sep = "\t")
clin_data = data.frame("Label" = rep(0:1, c(43,39)), row.names = colnames(count_data))
head(clin_data)
clin_data$Label = as.factor(clin_data$Label)
levels(clin_data$Label) = c("normal", "diabetes")
dds = DESeqDataSetFromMatrix(countData = count_data, colData = clin_data, design = ~Label)
keep <- rowSums(counts(dds)) > 1
dds <- dds[keep,]
dds <- DESeq(dds)
res <- results(dds, contrast=c("Label","normal","diabetes"))
resLFC1 <- results(dds, lfcThreshold=1)
table(resLFC1$pvalue < 0.05)
library(DESeq2)
dds = DESeqDataSetFromMatrix(countData = count_data, colData = clin_data, design = ~Label)
keep <- rowSums(counts(dds)) > 1
dds <- dds[keep,]
dds <- DESeq(dds)
res <- results(dds, contrast=c("Label","normal","diabetes"))
resLFC1 <- results(dds, lfcThreshold=1)
table(resLFC1$pvalue < 0.05)
count_data
genes = resLFC1[which((resLFC1$pvalue < 0.05) == TRUE),]
genes
library(EnsDb.Hsapiens.v79)
annotation <- select(EnsDb.Hsapiens.v79, keys=row.names(genes), keytype = "GENEID", columns = c("SYMBOL"))
annotation
library(DESeq2)
count_data = read.csv("C:/drug discovery hackathon/day_2/counts_endothelial.csv", row.names = 1)
clin_data = data.frame("Label" = c(0,1,1,1,1,0,0,0,0,0), row.names = colnames(count_data) )
clin_data$Label = as.factor(clin_data$Label)
levels(clin_data$Label) = c("normal", "diabetes")
dds = DESeqDataSetFromMatrix(countData = count_data, colData = clin_data, design = ~Label)
keep <- rowSums(counts(dds)) > 1
dds <- dds[keep,]
dds <- DESeq(dds)
res <- results(dds, contrast=c("Label","normal","diabetes"))
resLFC1 <- results(dds, lfcThreshold=1)
table(resLFC1$pvalue < 0.05)
resLFC1
BiocManager::install('EnhancedVolcano')
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
xlim = c(-5, 8))
library(EnhancedVolcano)
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
xlim = c(-5, 8))
EnhancedVolcano(res,
lab = rownames(res),
x = 'log2FoldChange',
y = 'pvalue',
xlim = c(-5, 8))
EnhancedVolcano(res1,lab = rownames(res1), title = "Diabetes versus control",x = 'log2FoldChange',y = 'pvalue',xlim = c(-5, 8))
EnhancedVolcano(res,lab = rownames(res), title = "Diabetes versus control",x = 'log2FoldChange',y = 'pvalue',xlim = c(-5, 8))
resultsNames(dds)
resNorm <- lfcShrink(dds, coef=2, type="normal")
plotMA(resLFC, xlim=xlim, ylim=ylim)
resLFC1 <- results(dds, lfcThreshold=1)
#MA plot
plotMA(resLFC, xlim=xlim, ylim=ylim)
#MA plot
plotMA(resLFC1, xlim=xlim, ylim=ylim)
#MA plot
plotMA(resLFC1)
vsd <- vst(dds, blind=FALSE)
sampleDists <- dist(t(assay(vsd)))
library(RColorBrewer)
sampleDistMatrix <- as.matrix(sampleDists)
sampleDistMatrix
rownames(sampleDistMatrix) <- paste(vsd$condition, vsd$type, sep="-")
colnames(sampleDistMatrix) <- NULL
sampleDistMatrix
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
)
library(RColorBrewer)
library(gplots)
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
)
heatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
)
library("pheatmap")
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:20]
df <- as.data.frame(colData(dds)[,c("condition","type")])
pheatmap(assay(ntd)[select,], cluster_rows=FALSE,
kk
sl
colData(dds)
df <- as.data.frame(colData(dds)[,c("condition")])
df <- as.data.frame(colData(dds)[,c("Label")])
#pheatmap
td <- normTransform(dds)
pheatmap(assay(ntd)[select,], cluster_rows=FALSE, show_rownames=FALSE,
cluster_cols=FALSE, annotation_col=df)
#pheatmap
ntd <- normTransform(dds)
pheatmap(assay(ntd)[select,], cluster_rows=FALSE, show_rownames=FALSE,
cluster_cols=FALSE, annotation_col=df)
df
assay(ntd)
ntd <- normTransform(dds)
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:100]
df <- as.data.frame(colData(dds)[,c("Label")])
pheatmap(assay(ntd)[select,], cluster_rows=FALSE, show_rownames=FALSE,
cluster_cols=FALSE, annotation_col=df)
assay(ntd)[select,]
test_df = assay(ntd)[select,]
colnames(test_df) = rownames(df)
pheatmap(test_df, cluster_rows=FALSE, show_rownames=FALSE,
cluster_cols=FALSE, annotation_col=df)
pheatmap(test_df, cluster_rows=FALSE, show_rownames=FALSE,
cluster_cols=FALSE, annotation_col=df, main = "Diabetes versus Normal")
ntd <- normTransform(dds)
select <- order(rowMeans(counts(dds,normalized=TRUE)),
decreasing=TRUE)[1:20]
df <- as.data.frame(colData(dds)[,c("Label")])
test_df = assay(ntd)[select,]
colnames(test_df) = rownames(df)
pheatmap(test_df, cluster_rows=FALSE, show_rownames=FALSE,
cluster_cols=FALSE, annotation_col=df, main = "Diabetes versus Normal")
pheatmap(test_df, cluster_rows=FALSE, show_rownames=T,
cluster_cols=FALSE, annotation_col=df, main = "Diabetes versus Normal")
pheatmap(test_df, cluster_rows=FALSE, show_rownames=T,
cluster_cols=T, annotation_col=df, main = "Diabetes versus Normal")
head(test_df)
colnames(test_df) = rownames(df)
test_df
library(caTools)
library(e1071)
fin_df = t(df)
head(fin_df)
head(test_df)
genes = resLFC1[which((resLFC1$pvalue < 0.05) == TRUE),]
gene_list = rownames(genes)
hypoxia_df = read.csv("C:/drug discovery hackathon/files/GO_term_summary_20200915_170513.csv")
hypoxia_genes = hypoxia_df$Symbol
hypoxia_genes = toupper(hypoxia_genes)
hypoxia_diabetes_genes = intersect(gene_list,hypoxia_genes)
hypoxia_df = read.csv("C:/drug discovery hackathon/files/GO_term_summary_20200915_170513.csv")
hypoxia_df = read.csv("C:/drug discovery hackathon/files/GO_term_summary_20200915_170513.csv")
hypoxia_genes = hypoxia_df$Symbol
hypoxia_genes = toupper(hypoxia_genes)
hypoxia_diabetes_genes = intersect(gene_list,hypoxia_genes)
hypoxia_diabetes_genes
install.packages('sigora')
gene_list
library(sigora)
sigora(kegH, queryList = gene_list)
sigora(kegH, queryList = gene_list, level = 4)
sigora(kegH, queryList = gene_list, level = 4, saveFile = "C:/drug discovery hackathon/files")
sigora(kegH, queryList = gene_list, level = 4, saveFile = "C:\Users\rajra\OneDrive\Desktop/ora_kegg.csv")
sigora(kegH, queryList = gene_list, level = 4, saveFile = "C:/Users/rajra/OneDrive/Desktop/ora_kegg.csv")
sigora(kegH, queryList = gene_list, level = 4, saveFile = "C:/Users/rajra/OneDrive/Desktop/ora_kegg.txt")
sigora(reaH, queryList = gene_list, level = 4, saveFile = "C:/Users/rajra/OneDrive/Desktop/ora_reactome.txt")
#Volcano plot
EnhancedVolcano(res,lab = rownames(res), title = "Diabetes versus control",x = 'log2FoldChange',y = 'pvalue',xlim = c(-5, 8))
#Volcano plot
EnhancedVolcano(res,lab = rownames(res), title = "Diabetes versus control",x = 'log2FoldChange',y = 'pvalue',xlim = c(-5, 8))
hypoxia_df = read.csv("C:/drug discovery hackathon/files/GO_term_summary_20200915_170513.csv")
hypoxia_genes = hypoxia_df$Symbol
hypoxia_genes = toupper(hypoxia_genes)
hypoxia_diabetes_genes = intersect(gene_list,hypoxia_genes)
hypoxia_diabetes_genes
write.csv(data.frame(gene_list), "C:/drug discovery hackathon/files/sign_genes.csv")
